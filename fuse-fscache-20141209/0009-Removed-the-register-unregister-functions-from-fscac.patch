From 3362818b50654880dd9e4c4c991f4334b601f2f6 Mon Sep 17 00:00:00 2001
From: "Vimal A.R" <arvimal@yahoo.in>
Date: Fri, 28 Nov 2014 18:45:31 +0530
Subject: [PATCH 09/35] Removed the register/unregister functions from
 fscache.h, maintained it as declarations

---
 fs/fuse/fscache.c | 34 ++++++++++++----------------------
 fs/fuse/fscache.h | 25 +++++++++++++------------
 fs/fuse/inode.c   | 11 +++++++----
 3 files changed, 32 insertions(+), 38 deletions(-)

diff --git a/fs/fuse/fscache.c b/fs/fuse/fscache.c
index 74d3f13..3a51c70 100644
--- a/fs/fuse/fscache.c
+++ b/fs/fuse/fscache.c
@@ -169,7 +169,8 @@ static uint16_t fuse_mnt_cache_get_key(const void *cookie_netfs_data,
 /* How do we need to do it? Pass the volume-ID here, or pass
  * it at the time of mount?
  */
-        char* uuid = "c753e3fe-ffa1-4d44-8aef-71ae9da41925";
+        //char* uuid = "c753e3fe-ffa1-4d44-8aef-71ae9da41925";
+        char* uuid = "e545e1ea-e932-45ad-a003-2e91bacea403";
         int uuidlen = strlen(uuid);
         memcpy(buffer, uuid, uuidlen);
         return uuidlen; 
@@ -214,8 +215,8 @@ static uint16_t fuse_fh_cache_get_key(const void *cookie_netfs_data,
  */
 	const struct fuse_inode *fi = cookie_netfs_data;
 
-        int64_t fhlen;
-        fhlen = strlen(fi->orig_ino);
+        uint16_t fhlen;
+        fhlen = sizeof(fi->orig_ino);
         
         memcpy(buffer, fi->orig_ino, fhlen);
         return fhlen;
@@ -305,32 +306,21 @@ static void fuse_fscache_enable_inode_cookie(struct inode *inode)
 	if (fc->flags & FUSE_MOUNT_FSCACHE) {
 		fi->fscache = fscache_acquire_cookie(fc->fscache.mnt,
 				&fuse_fh_cache_index_def, fi, true);
-	}
+ 	}
 }
 
 /******************************************/
 /* Register/Unregister the netfs
  ******************************************/
 
-/* a) Registering the netfs
-
-void fscache_register_netfs(&fuse_cache_netfs) {
-	return 0;
+// a) Registering the netfs
+static int fuse_register_fscache(void)
+{
+        return fscache_register_netfs(&fuse_cache_netfs);
 }
 
-
-/* b) Unregister the netfs  
-
-void fscache_unregister_netfs(struct fscache_netfs *netfs) {
-	return 0;
+static void fuse_unregister_netfs(void)
+{
+        fscache_unregister_netfs(&fuse_cache_netfs);
 }
 
-
-/* Index registration for fuse_fscache 
-
-struct fscache_cookie *fscache_acquire_cookie(struct fscache_cookie *parent,
-					const struct fscache_object_def *def,
-					void *netfs_data,
-					bool enable);
-
-*/
diff --git a/fs/fuse/fscache.h b/fs/fuse/fscache.h
index 9a304dd..d269307 100644
--- a/fs/fuse/fscache.h
+++ b/fs/fuse/fscache.h
@@ -8,7 +8,7 @@
  * as published by the Free Software Foundation; either version
  * 2 of the License, or (at your option) any later version.
 */
-
+#include <linux/fscache.h>
 #ifndef _FS_FUSE_FSCACHE_H
 #define _FS_FUSE_FSCACHE_H
 
@@ -19,29 +19,30 @@
  */
 
 #ifdef CONFIG_FUSE_FSCACHE
-//extern  struct fscache_netfs fuse_cache_netfs;
-struct fscache_netfs fuse_cache_netfs;
+extern struct fscache_netfs fuse_cache_netfs;
 
-static inline int fuse_register_fscache()
-{
+static inline int fuse_register_fscache(void)
+/*{
 	return fscache_register_netfs(&fuse_cache_netfs);
-}
+}*/
 
-static inline void fuse_unregister_netfs()
-{
+static inline void fuse_unregister_netfs(void)
+/*{
 	fscache_unregister_netfs(&fuse_cache_netfs);
-}
+}*/
 
 #else /* CONFIG_FUSE_FSCACHE */
 
 #warning CONFIG_FUSE_FSCACHE is not defined!
 
 static inline int fuse_register_fscache(void)
-{
+/*{
 	return 0;
-}
+}*/
 
-static inline void fuse_unregister_netfs(void) {}
+static inline void fuse_unregister_netfs(void) 
+/*{
+}*/
 #endif /* CONFIG_FUSE_FSCACHE */
 
 #endif /* _FS_FUSE_FSCACHE_H */
diff --git a/fs/fuse/inode.c b/fs/fuse/inode.c
index 2362d09..e72f764 100644
--- a/fs/fuse/inode.c
+++ b/fs/fuse/inode.c
@@ -7,6 +7,8 @@
 */
 
 #include "fuse_i.h"
+/*To get the fuse.glusterfs indexes called*/
+#include "fscache.h"
 
 #include <linux/pagemap.h>
 #include <linux/slab.h>
@@ -20,8 +22,6 @@
 #include <linux/random.h>
 #include <linux/sched.h>
 #include <linux/exportfs.h>
-/*To get the fuse.glusterfs indexes called*/
-#include "fscache.h"
 
 MODULE_AUTHOR("Miklos Szeredi <miklos@szeredi.hu>");
 MODULE_DESCRIPTION("Filesystem in Userspace");
@@ -509,10 +509,11 @@ static int parse_fuse_opt(char *opt, struct fuse_mount_data *d, int is_bdev)
 			continue;
 
 		token = match_token(p, tokens, args);
-		switch (token) {
-
+		
 		/* Debug for detecting the token while mounting with 'fsc' */
 		printk(KERN_WARNING "fuse: opt=%s, p=%s, token=%d\n", opt, p, token);
+		switch (token) {
+
 		case OPT_FD:
 			if (match_int(&args[0], &value))
 				return 0;
@@ -598,6 +599,8 @@ static int fuse_show_options(struct seq_file *m, struct dentry *root)
 		seq_printf(m, ",max_read=%u", fc->max_read);
 	if (sb->s_bdev && sb->s_blocksize != FUSE_DEFAULT_BLKSIZE)
 		seq_printf(m, ",blksize=%lu", sb->s_blocksize);
+	if (fc->flags & FUSE_MOUNT_FSCACHE)
+		seq_puts(m, ",fsc");
 	return 0;
 }
 
-- 
1.9.3

