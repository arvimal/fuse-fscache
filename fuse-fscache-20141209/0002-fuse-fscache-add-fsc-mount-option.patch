From eb376b8e5c9e176ec4e156869c8f95b05139a4d9 Mon Sep 17 00:00:00 2001
From: Niels de Vos <ndevos@redhat.com>
Date: Fri, 17 Oct 2014 20:22:27 +0200
Subject: [PATCH 02/35] fuse/fscache: add "fsc" mount option

With the "fsc" mount option, FS-Cache can get turned on. We might want
to add a check during FUSE/INIT for support of FS-Cache in the
user-space part. When "fsc" is enabled, but user-space does not provide
for the (possibly needed) FS-Cache extensions, we can remove the
FUSE_MOUNT_FSCACHE flag from fuse_conn->flags.
---
 fs/fuse/fuse_i.h | 4 ++++
 fs/fuse/inode.c  | 6 ++++++
 2 files changed, 10 insertions(+)

diff --git a/fs/fuse/fuse_i.h b/fs/fuse/fuse_i.h
index e8e47a6..30cdf5a 100644
--- a/fs/fuse/fuse_i.h
+++ b/fs/fuse/fuse_i.h
@@ -44,6 +44,10 @@
     doing the mount will be allowed to access the filesystem */
 #define FUSE_ALLOW_OTHER         (1 << 1)
 
+/** If the FUSE_MOUNT_FSCACHE flag is given, then the FS-Cache funtionality
+    is enabled. FS-Cache also requires support in in user-space.*/
+#define FUSE_MOUNT_FSCACHE       (1 << 2)
+
 /** Number of page pointers embedded in fuse_req */
 #define FUSE_REQ_INLINE_PAGES 1
 
diff --git a/fs/fuse/inode.c b/fs/fuse/inode.c
index 03246cd..37b65f0 100644
--- a/fs/fuse/inode.c
+++ b/fs/fuse/inode.c
@@ -463,6 +463,7 @@ enum {
 	OPT_ALLOW_OTHER,
 	OPT_MAX_READ,
 	OPT_BLKSIZE,
+	OPT_MOUNT_FSCACHE,
 	OPT_ERR
 };
 
@@ -475,6 +476,7 @@ static const match_table_t tokens = {
 	{OPT_ALLOW_OTHER,		"allow_other"},
 	{OPT_MAX_READ,			"max_read=%u"},
 	{OPT_BLKSIZE,			"blksize=%u"},
+	{OPT_MOUNT_FSCACHE,		"fsc"},
 	{OPT_ERR,			NULL}
 };
 
@@ -560,6 +562,10 @@ static int parse_fuse_opt(char *opt, struct fuse_mount_data *d, int is_bdev)
 			d->blksize = value;
 			break;
 
+		case OPT_MOUNT_FSCACHE:
+			d->flags |= FUSE_MOUNT_FSCACHE;
+			break;
+
 		default:
 			return 0;
 		}
-- 
1.9.3

